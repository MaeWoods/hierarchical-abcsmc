#define NSPECIES 30
#define NPARAM 31
#define NREACT 19

#define leq(a,b) a<=b
#define neq(a,b) a!=b
#define geq(a,b) a>=b
#define lt(a,b) a<b
#define gt(a,b) a>b
#define eq(a,b) a==b
#define and_(a,b) a&&b
#define or_(a,b) a||b


__constant__ int smatrix[]={
    1.0,    -1.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    -1.0,    1.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    1.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    1.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    1.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    1.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    1.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    1.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    1.0,    0.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    1.0,
    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    -1.0,    1.0,    0.0,    0.0,    0.0,    0.0,
};


__device__ void hazards(int *y, float *h, float t, int tid){
    y[17]=tex2D(param_tex,8,tid) - y[16];
    y[20]=tex2D(param_tex,9,tid) - y[19];
    y[23]=tex2D(param_tex,10,tid) - y[22];
    y[1]=tex2D(param_tex,3,tid) - y[0];
    y[5]=tex2D(param_tex,4,tid) - y[4];
    y[8]=tex2D(param_tex,5,tid) - y[7];
    y[11]=tex2D(param_tex,6,tid) - y[10];
    y[14]=tex2D(param_tex,7,tid) - y[13];

    h[0] = tex2D(param_tex,0,tid)*tex2D(param_tex,1,tid)*y[2]*y[1];
    h[1] = tex2D(param_tex,0,tid)*tex2D(param_tex,2,tid)*y[0];
    h[2] = tex2D(param_tex,0,tid)*tex2D(param_tex,11,tid)*y[3]*y[5];
    h[3] = tex2D(param_tex,0,tid)*tex2D(param_tex,13,tid)*y[4];
    h[4] = tex2D(param_tex,0,tid)*tex2D(param_tex,12,tid)*y[6]*y[8];
    h[5] = tex2D(param_tex,0,tid)*tex2D(param_tex,14,tid)*y[7];
    h[6] = tex2D(param_tex,0,tid)*tex2D(param_tex,18,tid)*y[9]*y[11];
    h[7] = tex2D(param_tex,0,tid)*tex2D(param_tex,19,tid)*y[10];
    h[8] = tex2D(param_tex,0,tid)*tex2D(param_tex,20,tid)*y[12]*y[14];
    h[9] = tex2D(param_tex,0,tid)*tex2D(param_tex,21,tid)*y[13];
    h[10] = tex2D(param_tex,0,tid)*tex2D(param_tex,22,tid)*y[15]*y[17];
    h[11] = tex2D(param_tex,0,tid)*tex2D(param_tex,23,tid)*y[16];
    h[12] = tex2D(param_tex,0,tid)*tex2D(param_tex,24,tid)*y[18]*y[20];
    h[13] = tex2D(param_tex,0,tid)*tex2D(param_tex,25,tid)*y[19];
    h[14] = tex2D(param_tex,0,tid)*tex2D(param_tex,26,tid)*y[21]*y[23];
    h[15] = tex2D(param_tex,0,tid)*tex2D(param_tex,27,tid)*y[22];
    h[16] = tex2D(param_tex,0,tid)*tex2D(param_tex,16,tid)*y[3]*y[26];
    h[17] = tex2D(param_tex,0,tid)*tex2D(param_tex,17,tid)*y[6]*y[27];
    h[18] = tex2D(param_tex,0,tid)*tex2D(param_tex,15,tid)*y[9]*y[24];

}

